package org.example;

import java.util.List;

/**
 * Интерфейс IGood предоставляет общие методы для работы с коллекцией объектов типа T.
 * @param <T> Тип объекта, с которым работает интерфейс.
 */
public interface IGood<T> {

    /**
     * Метод для удаления элемента из коллекции по индексу.
     * @param getIndexObj Объект, который предоставляет метод для получения индекса.
     * @param data Коллекция объектов типа T, из которой нужно удалить элемент.
     */
    default void deleteGood(GetIndex getIndexObj, List<T> data) {
        int index = getIndexObj.getIndex();
        try {
            // Удаление элемента из коллекции по индексу (индексы начинаются с 1)
            data.remove(index - 1);
        } catch (Exception e) {
            // Игнорирование исключений при удалении
            return;
        }
        System.out.println("Успешно удалено");
    }

    /**
     * Метод для вывода списка объектов.
     * @param data Коллекция объектов типа T, которую нужно вывести на экран.
     */
    default void GoodsList(List<T> data) {
        if (!data.isEmpty()) {
            // Вывод всех элементов коллекции с индексами (индексы начинаются с 1)
            for (int i = 0; i < data.size(); i++) {
                System.out.println(i + 1 + ") " + data.get(i).toString());
            }
        } else {
            System.out.println("Нет данных");
        }
    }

    /**
     * Метод для сравнения данных (не реализован в интерфейсе, должен быть реализован в классах, которые реализуют интерфейс).
     */
    void equal();

    /**
     * Метод для добавления нового объекта (не реализован в интерфейсе, должен быть реализован в классах, которые реализуют интерфейс).
     */
    void addGood();
}
